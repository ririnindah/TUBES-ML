# Deklarasi library yang digunakan
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

import sklearn
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.neighbors import KNeighborsRegressor as KNN
from sklearn.metrics import mean_squared_error
from sklearn.svm import SVR
from sklearn.preprocessing import LabelEncoder

import pickle

# memanggil dataset
dataset = pd.read_csv('merc.csv')


def preprocess_data(data):
    # Encode categorical features
    le = LabelEncoder()
    
    data['model'] = le.fit_transform(data['model'])
    data['transmission'] = le.fit_transform(data['transmission'])
    data['fuelType'] = le.fit_transform(data['fuelType'])
    
    return data

dataset = preprocess_data(dataset)

# seleksi features
features = ['model', 'year','transmission' ,'mileage', 'fuelType' ,'tax', 'mpg', 'engineSize']
x = dataset[features]
y = dataset['price']

x_train, x_test, y_train, y_test = train_test_split(x, y, random_state=70)
y_test.shape

rf_regressor = LinearRegression()

# Melatih model pada set pelatihan
rf_regressor.fit(x_train, y_train)

# Melakukan prediksi pada set uji
y_pred = rf_regressor.predict(x_test)

score = rf_regressor.score(x_test, y_test)
print(f'Akurasi: {score}')

# save model supaya bisa dipanggil di web
filename = 'estimasi_mobil.sav'
pickle.dump(rf_regressor, open(filename, 'wb'))